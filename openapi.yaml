---
openapi: 3.1.0
info:
  title: Bempaggo API
  license:
    name: Bempaggo v2
    url: https://bempaggo.com.br/politicas-privacidade
  version: v2
servers:
- url: https://apisandbox.bempaggo.io
tags:
- name: Assinaturas
- name: Cartões
- name: Clientes
- name: Cobranças
- name: Endereço
- name: Eventos
- name: Faturas
- name: Pedido
- name: Plugins
- name: Produtos
- name: Recebedores
- name: Tabelas
- name: Taxas
- name: Testes
- name: Tokenização
- name: Transações
- name: Transferências
- name: Usuários
- name: Vendedores
paths:
  /api/v2/affiliates/{affiliateId}/subscriptions:
    get:
      parameters:
      - name: affiliateId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
  /api/v2/cards/tokens:
    post:
      tags:
      - Tokenização
      summary: Criar token
      description: Criando um token do cartão de crédito.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardTokenV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/cards/tokens/{token}:
    get:
      tags:
      - Tokenização
      summary: Consultar Token do Cartão
      description: Consulta o token do cartão.
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges:
    get:
      tags:
      - Cobranças
      summary: Listar cobranças
      description: Listando as cobranças.
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/credit/card:
    post:
      tags:
      - Cobranças
      summary: Criar cobrança
      description: Criando uma cobrança via cartão de crédito.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnetimeChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}:
    get:
      tags:
      - Cobranças
      summary: Obter cobrança por ID
      description: Obtendo uma cobrança gerada via cartão de crédito por ID.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/boleto/cancel:
    post:
      tags:
      - Cobranças
      summary: Cancelar Boleto
      description: Efetua a baixa de um boleto.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/credit-card/capture:
    post:
      tags:
      - Cobranças
      summary: Capturar uma cobrança
      description: Capturando uma cobrança via cartão de crédito.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/credit-card/refund:
    post:
      tags:
      - Cobranças
      summary: Estornar cobrança
      description: Estornando uma cobrança via cartão de crédito.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/credit/card/refund:
    post:
      tags:
      - Cobranças
      summary: Estornar cobrança
      description: Estornando uma cobrança via cartão de crédito.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/pix/cancel:
    post:
      tags:
      - Cobranças
      summary: Cancelar um QRCode
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/pix/return:
    post:
      tags:
      - Cobranças
      summary: Estornar cobrança PIX
      description: Devolvendo uma cobrança de PIX.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/charges/{id}/splits:
    get:
      tags:
      - Cobranças
      summary: Listar splits
      description: Listando os splits de uma cobrança.
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/codes/banks:
    get:
      tags:
      - Tabelas
      summary: Listar códigos dos bancos
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/codes/mccs:
    get:
      tags:
      - Tabelas
      summary: Listar MCCs
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/customers:
    post:
      tags:
      - Clientes
      summary: Criar cliente
      description: Cria um cliente.
      operationId: create-customer-v2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}:
    get:
      tags:
      - Clientes
      summary: Obter cliente por documento
      description: Obter um cliente por documento.
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
    put:
      tags:
      - Clientes
      summary: Editar cliente
      description: Editando um cliente por documento.
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/addresses:
    get:
      tags:
      - Endereço
      summary: Obter lista de endereços
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AddressV2Response"
      deprecated: true
      security:
      - bearerAuth: []
    post:
      tags:
      - Endereço
      summary: Criar endereço do cliente
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/addresses/best:
    get:
      tags:
      - Endereço
      summary: Obter endereço padrão
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AddressV2Response"
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/addresses/{id}:
    put:
      tags:
      - Endereço
      summary: Alterar endereço padrão
      parameters:
      - name: id
        in: path
        description: CPF/CNPJ do cliente.
        required: true
        schema:
          format: int32
          type: integer
      - name: document
        in: path
        description: CPF/CNPJ do cliente.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/check:
    get:
      tags:
      - Clientes
      summary: Verifica se o cliente existe pelo documento
      description: Verifica se o cliente existe pelo documento
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/credit/cards:
    get:
      tags:
      - Cartões
      summary: Listar cartões por cliente
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
    post:
      tags:
      - Cartões
      summary: Criar cartão de crédito por documento
      description: Cria cartão de crédito para um cliente através do documento.
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/credit/cards/best:
    get:
      tags:
      - Cartões
      summary: Obter cartão padrão
      description: Obter o cartão padrão do cliente.
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/document/{document}/credit/cards/{id}:
    put:
      tags:
      - Cartões
      summary: Alterar cartão de crédito padrão
      parameters:
      - name: document
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      deprecated: true
      security:
      - bearerAuth: []
  /api/v2/customers/{customerId}/subscriptions:
    get:
      tags:
      - Clientes
      summary: Listar assinaturas por cliente
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/events:
    get:
      tags:
      - Eventos
      summary: Listar os eventos por ID do pedido ou por referência do pedido
      description: Listando os eventos de um pedido.
      parameters:
      - name: orderReferenceOrId
        in: query
        description: ID ou Código de referência do pedido
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
    post:
      tags:
      - Eventos
      summary: Reenviar evento de webhook por ID do pedido
      description: Enviando eventos via webhook.
      parameters:
      - name: orderId
        in: query
        description: ID do pedido
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/events/order/{orderId}:
    get:
      tags:
      - Eventos
      summary: Listar os eventos por ID do pedido
      description: Listando os eventos de um pedido.
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/events/orders/{orderId}:
    post:
      tags:
      - Eventos
      summary: Disparar evento por ID do pedido
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/events/{eventId}:
    get:
      tags:
      - Eventos
      summary: Obter evento por ID
      description: Obtendo um evento gerado via webhook por id.
      parameters:
      - name: eventId
        in: path
        description: ID do evento de webhook
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
    post:
      tags:
      - Eventos
      summary: Envio de webhook por ID
      description: Enviando um evento via webhook.
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices:
    get:
      tags:
      - Faturas
      summary: Listar faturas
      description: Obtém uma lista de faturas.
      parameters:
      - name: invoiceNumber
        in: query
        description: Número único da fatura para busca.
        schema:
          type: string
          example: INV-00001
      - name: dueDateFrom
        in: query
        description: "Data inicial do vencimento da fatura, em milissegundos desde\
          \ a época (Unix timestamp)."
        schema:
          type: number
          example: 1846438350000
      - name: dueDateTo
        in: query
        description: "Data final do vencimento da fatura, em milissegundos desde a\
          \ época (Unix timestamp)."
        schema:
          type: number
          example: 1846438350000
      - name: closeDateFrom
        in: query
        description: "Data inicial de fechamento da fatura, em milissegundos desde\
          \ a época (Unix timestamp)."
        schema:
          type: number
          example: 1846438350000
      - name: closeDateTo
        in: query
        description: "Data final de fechamento da fatura, em milissegundos desde a\
          \ época (Unix timestamp)."
        schema:
          type: number
          example: 1846438350000
      - name: status
        in: query
        description: Status atual da fatura.
        schema:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceStatus"
      - name: document
        in: query
        description: "Número do documento CPF/CNPJ do cliente, usado para busca de\
          \ faturas específicas."
        schema:
          type: string
          example: "69825903058"
      - name: page
        in: query
        description: Número da página para a paginação dos resultados.
        schema:
          type: number
          example: 0
      - name: size
        in: query
        description: Número de registros por página para a paginação dos resultados.
        schema:
          type: number
          example: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/charges/latest:
    get:
      tags:
      - Faturas
      summary: Obter última cobrança de uma fatura.
      description: Obtém a última cobrança com as transações
      parameters:
      - name: invoiceNumber
        in: query
        description: Número único da fatura para busca.
        schema:
          type: string
          example: INV-00001
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}:
    get:
      tags:
      - Faturas
      summary: Obter fatura por ID
      description: Obtém uma fatura por ID.
      parameters:
      - name: id
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}/charges/latest:
    get:
      tags:
      - Faturas
      summary: Obter última cobrança de uma fatura.
      description: Obtém a última cobrança com as transações
      parameters:
      - name: id
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}/credit-card/pay:
    post:
      tags:
      - Faturas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}/send-email:
    post:
      tags:
      - Faturas
      summary: Envia uma fatura por e-mail
      description: Envia uma fatura por e-mail.
      parameters:
      - name: id
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}/uncollectible:
    post:
      tags:
      - Faturas
      summary: Void
      description: Void
      parameters:
      - name: id
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{id}/void:
    post:
      tags:
      - Faturas
      summary: Void
      description: Void
      parameters:
      - name: id
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/invoices/{invoiceId}/items:
    get:
      tags:
      - Faturas
      parameters:
      - name: invoiceId
        in: path
        description: ID da fatura.
        required: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/orders/{id}/metadata:
    get:
      tags:
      - Pedido
      summary: Listar metadados por pedido
      description: Listando os metadados de um pedido.
      operationId: get-metadata-by-order
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/products:
    post:
      tags:
      - Produtos
      summary: Criar produto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/products/{id}:
    get:
      tags:
      - Produtos
      summary: Obter produto por ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
    put:
      tags:
      - Produtos
      summary: Editar produto
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductV2UpdateRequest"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/products/{id}/coupons:
    get:
      tags:
      - Produtos
      summary: Obter cupons por checkout
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivables:
    get:
      tags:
      - Recebedores
      summary: Listar Recebíveis por ID de Referência do Pedido
      operationId: get-receivables-by-order-reference
      parameters:
      - name: orderReference
        in: query
        description: Código de referência do pedido.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivables/charges/{chargeId}:
    get:
      tags:
      - Recebedores
      summary: Listar Recebíveis por ID da Cobrança
      operationId: get-receivables-by-charge-id
      parameters:
      - name: chargeId
        in: path
        description: ID da Cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivables/transactions/{referenceId}:
    get:
      tags:
      - Recebedores
      summary: Listar Recebíveis por ID de Referência
      operationId: receivables-by-reference
      parameters:
      - name: referenceId
        in: path
        description: Código de referência da transação.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivers/cnpj:
    post:
      tags:
      - Recebedores
      summary: Criar recebedor pessoa jurídica (CNPJ)
      operationId: create-receivers-cnpj
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiverCnpjV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivers/cpf:
    post:
      tags:
      - Recebedores
      summary: Criar recebedor pessoa física (CPF)
      operationId: create-receivers-cpf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiverCpfV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/receivers/{idAffiliate}:
    get:
      tags:
      - Recebedores
      summary: Obter recebedor por ID
      operationId: get-receivers-by-id
      parameters:
      - name: idAffiliate
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/cnpj:
    post:
      tags:
      - Vendedores
      summary: Criar vendedor pessoa jurídica (CNPJ)
      description: Cadastrando um vendedor.
      operationId: create-sellers-cnpj
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiverCnpjV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/cpf:
    post:
      tags:
      - Vendedores
      summary: Criar vendedor pessoa física (CPF)
      description: Cadastrando um vendedor.
      operationId: create-sellers-cpf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiverCpfV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{idAffiliate}:
    get:
      tags:
      - Vendedores
      summary: Obter vendedor por ID
      operationId: get-sellers-by-id
      parameters:
      - name: idAffiliate
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/invoices:
    post:
      tags:
      - Faturas
      summary: Cria uma nova fatura
      description: Cria uma nova fatura para um cliente específico
      parameters:
      - name: sellerId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceV2Request"
      responses:
        "201":
          description: A fatura foi criada com sucesso.
          headers:
            Location:
              description: Local onde o recurso foi criado.
              style: simple
              schema:
                type: string
            Content-ID:
              description: ID do recurso que foi criado.
              style: simple
              schema:
                type: integer
            Link:
              description: "URLs de referência do recurso criado. Ex.: <https://apisandbox.bempaggo.io/api/v2/invoices/{invoiceId}>;\
                \ rel=\"self\""
              style: simple
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Request mal formatado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorFieldV2Message"
        "401":
          description: Não autorizado.
        "422":
          description: O recurso não pode ser processado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Código do erro.
                    type: string
                  message:
                    description: Mensagem detalhada do erro.
                    type: string
        "500":
          description: Erro interno do servidor
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/orders/boleto:
    post:
      tags:
      - Pedido
      summary: Criar pedido via boleto
      description: Criando uma pedido via Boleto.
      parameters:
      - name: sellerId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OneTimeOrderV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/orders/credit-card/authorize:
    post:
      tags:
      - Pedido
      summary: Criar pedido via cartão de crédito
      description: Autorizando um pedido via cartão de crédito.
      operationId: order-credit-card-authorize
      parameters:
      - name: sellerId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OneTimeOrderV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/orders/pix:
    post:
      tags:
      - Pedido
      summary: Criar pedido via PIX
      description: Criando uma pedido via PIX.
      parameters:
      - name: sellerId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OneTimeOrderV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/recurring-invoices:
    post:
      tags:
      - Faturas
      summary: Cria uma nova fatura recorrente
      description: Cria uma nova fatura recorrente para um cliente específico
      parameters:
      - name: sellerId
        in: path
        description: ID do Seller.
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecurringInvoiceV2Request"
      responses:
        "201":
          description: A fatura foi criada com sucesso.
          headers:
            Location:
              description: Local onde o recurso foi criado.
              style: simple
              schema:
                type: string
            Content-ID:
              description: ID do recurso que foi criado.
              style: simple
              schema:
                type: integer
            Link:
              description: "URLs de referência do recurso criado. Ex.: <https://apisandbox.bempaggo.io/api/v2/invoices/{invoiceId}>;\
                \ rel=\"self\""
              style: simple
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Request mal formatado.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorFieldV2Message"
        "401":
          description: Não autorizado.
        "422":
          description: O recurso não pode ser processado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    description: Código do erro.
                    type: string
                  message:
                    description: Mensagem detalhada do erro.
                    type: string
        "500":
          description: Erro interno do servidor
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/simulation:
    post:
      tags:
      - Taxas
      summary: Simulador de taxas
      description: Exibe as taxas de intermediação cobradas pelo Bempaggo para todas
        as formas de pagamento.
      parameters:
      - name: sellerId
        in: path
        description: ID do  Seller.
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/sellers/{sellerId}/subscriptions/plans/{planId}/credit-card:
    post:
      tags:
      - Assinaturas
      summary: Criar assinatura
      description: Criando uma assinatura.
      parameters:
      - name: sellerId
        in: path
        description: ID do Seller.
        required: true
        schema:
          format: int64
          type: integer
      - name: planId
        in: path
        description: ID do plano.
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/simulations/charges/{id}/payment:
    post:
      tags:
      - Testes
      summary: Simular um pagamento
      parameters:
      - name: id
        in: path
        description: ID da cobrança.
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/subscriptions/plans/{planId}/credit/card:
    post:
      tags:
      - Assinaturas
      summary: Criar assinatura
      description: Criando uma assinatura.
      parameters:
      - name: planId
        in: path
        description: ID do plano.
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionChargeV2Request"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/subscriptions/{id}:
    get:
      tags:
      - Assinaturas
      summary: Obter assinatura por ID
      description: Consultando uma assinatura por ID.
      parameters:
      - name: id
        in: path
        description: ID da assinatura.
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
    delete:
      tags:
      - Assinaturas
      summary: Cancelar assinatura
      description: Cancelando uma assinatura por ID.
      parameters:
      - name: id
        in: path
        description: ID da assinatura.
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/subscriptions/{id}/charges:
    get:
      tags:
      - Assinaturas
      summary: Obter cobranças por assinatura
      description: Consultando cobranças de uma assinatura.
      parameters:
      - name: id
        in: path
        description: ID da assinatura.
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/transactions:
    get:
      tags:
      - Transações
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          default: "10"
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          default: "0"
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/transactions/reference/{yourReferenceId}:
    get:
      tags:
      - Transações
      summary: Listar transações por Reference ID
      description: Lista paginada de transações por reference ID.
      parameters:
      - name: yourReferenceId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/transactions/{id}:
    get:
      tags:
      - Transações
      summary: Obter transação por ID
      description: Obtendo uma transação por ID.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/transfers:
    get:
      tags:
      - Transferências
      summary: Listar Transferências
      description: Lista transferências
      operationId: get-transfers-by-filter
      parameters:
      - name: page
        in: query
        description: Número da página para a paginação dos resultados.
        schema:
          type: number
          example: 0
      - name: pageSize
        in: query
        description: Número de registros por página para a paginação dos resultados.
        schema:
          type: number
          example: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
  /api/v2/transfers/{transferId}/transactions:
    get:
      tags:
      - Transferências
      summary: Listar transações pela transferência
      description: Retorna uma lista de transações de uma transferência.
      operationId: get-transactions-by-transfer
      parameters:
      - name: transferId
        in: path
        description: ID da Transferẽncia.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema: {}
      security:
      - bearerAuth: []
components:
  schemas:
    AddressV2Request:
      required:
      - street
      - streetNumber
      - neighborhood
      - city
      - state
      - zipCode
      type: object
      properties:
        street:
          description: Logradouro do endereço.
          maxLength: 150
          minLength: 1
          type: string
          example: Rua Jair Hamms
        streetNumber:
          description: Número do enredeço.
          maxLength: 10
          minLength: 1
          type: string
          example: "38"
        lineTwo:
          description: Complemento do enredeço.
          maxLength: 200
          minLength: 0
          type: string
          example: Sala 101
        neighborhood:
          description: Bairro do enredeço.
          maxLength: 150
          minLength: 1
          type: string
          example: Pedra Branca
        city:
          description: Cidade do enredeço.
          maxLength: 200
          minLength: 1
          type: string
          example: Palhoça
        state:
          description: Estado (Código do estado no formato ISO 3166-2).
          maxLength: 2
          minLength: 2
          type: string
          example: SC
        zipCode:
          description: Código Postal (CEP).
          maxLength: 9
          minLength: 8
          type: string
          example: "88137084"
    AddressV2Response:
      type: object
      properties:
        street:
          type: string
        id:
          format: int32
          type: integer
        streetNumber:
          type: string
        lineTwo:
          type: string
        zipCode:
          type: string
        city:
          type: string
        state:
          type: string
        neighborhood:
          type: string
    AffiliateAddressV2Response:
      type: object
      properties:
        street:
          type: string
        streetNumber:
          type: string
        lineTwo:
          type: string
        neighborhood:
          type: string
        zipCode:
          type: string
        city:
          type: string
        state:
          type: string
        addressLineTwo:
          type: string
    AffiliateMinimalV2Response:
      type: object
      properties:
        id:
          format: int64
          description: ID da loja.
          type: integer
        name:
          description: Nome da loja.
          type: string
        businessName:
          description: Razão social da loja.
          type: string
        document:
          description: CNPJ da loja.
          type: string
        address:
          description: Endereço
          type: object
          allOf:
          - $ref: "#/components/schemas/AffiliateAddressV2Response"
        sellerId:
          description: ID de afiliação do vendedor
          type: string
        isSeller:
          type: boolean
        status:
          $ref: "#/components/schemas/AffiliateStatus"
    AffiliateStatus:
      enum:
      - ACTIVE
      - PENDING
      - INACTIVE
      - CANCELED
      type: string
    BankAccountV2Request:
      required:
      - bankCode
      - bankBranch
      - accountNumber
      - accountType
      type: object
      properties:
        bankCode:
          description: Código do banco
          maxLength: 3
          minLength: 3
          pattern: \d+
          type: string
          example: "123"
        bankBranch:
          description: Número da agência
          maxLength: 9
          minLength: 1
          type: string
          example: "123255"
        bankBranchCheckDigit:
          description: Número do dígito verificador da agência
          maxLength: 2
          minLength: 1
          type: string
          example: 1x
        accountNumber:
          description: Número da conta
          maxLength: 11
          minLength: 1
          type: string
          example: "123255"
        accountCheckDigit:
          description: Número do dígito verificador da conta
          maxLength: 2
          minLength: 1
          type: string
          example: "18"
        accountType:
          description: Tipo da conta
          type: string
          allOf:
          - $ref: "#/components/schemas/GatewayAccountTypes"
          example: CHECKING
    BankSlipPaymentV2Request:
      description: Pedido de pagamento V2 com boleto
      required:
      - days
      - type
      - amount
      - frequency
      type: object
      properties:
        days:
          format: int32
          description: Dias após a expiração do boleto quando o juros deve ser cobrado.
          type: integer
        type:
          description: Tipo de divisão. Os valores possíveis são flat ou percentage.
          enum:
          - FLAT
          - PERCENTAGE
          type: string
        amount:
          format: int32
          description: Valor em porcentagem ou em centavos da taxa de juros que será
            cobrada ao mês.
          type: integer
        frequency:
          description: Modo de cobrança dos juros.
          enum:
          - DAILY
          - MONTHLY
          - ANNUAL
          type: string
    BankSlipPaymentV2Request1:
      title: Boleto
      description: Dados de pagamento com boleto bancário
      required:
      - amount
      - paymentMethod
      - dueDate
      - paymentLimitDate
      type: object
      properties:
        amount:
          format: int64
          description: Valor da cobrança em centavos.
          minimum: 1
          type: integer
          example: 1000
        paymentMethod:
          description: Método de pagamento
          enum:
          - CREDIT_CARD
          - BOLETO
          - PIX
          - DEBIT_CARD
          - VOUCHER
          - TRANSFER
          - WALLET
          type: string
        splits:
          description: Regras de divisão do recebimento do valor
          type: array
          items:
            required:
            - amount
            - sellerId
            type: object
            properties:
              amount:
                format: int64
                description: Quantia em centavos recebidos que será do vendedor (loja)
                minimum: 1
                type: integer
                example: 1000
              sellerId:
                format: int64
                minimum: 1
                type: integer
              absorbFee:
                description: Se TRUE o recebedor será responsável por absorver as
                  taxas de intermediação.
                type: boolean
        ourNumber:
          description: Número que identifica unicamente um boleto para uma conta.
          maxLength: 15
          minLength: 5
          type: string
        documentNumber:
          description: Identificador do boleto.
          type: string
        dueDate:
          format: YYYY-MM-DD
          description: Data de vencimento.
          type: string
          example: 2025-01-01
        paymentLimitDate:
          format: YYYY-MM-DD
          description: Data limite de pagamento.
          type: string
          example: 2025-01-01
        fine:
          description: Aplicação da multa sobre o boleto.
          required:
          - days
          - type
          - amount
          type: object
          properties:
            days:
              format: int32
              description: Dias após a expiração do boleto quando a multa deve ser
                cobrada.
              type: integer
            type:
              description: Tipo de divisão. Os valores possíveis são flat ou percentage.
              enum:
              - FLAT
              - PERCENTAGE
              type: string
            amount:
              format: int32
              description: Valor em porcentagem ou em centavos que será cobrada na
                multa.
              type: integer
        interest:
          description: Aplicação do juros sobre o boleto.
          required:
          - days
          - type
          - amount
          - frequency
          type: object
          properties:
            days:
              format: int32
              description: Dias após a expiração do boleto quando o juros deve ser
                cobrado.
              type: integer
            type:
              description: Tipo de divisão. Os valores possíveis são flat ou percentage.
              enum:
              - FLAT
              - PERCENTAGE
              type: string
            amount:
              format: int32
              description: Valor em porcentagem ou em centavos da taxa de juros que
                será cobrada ao mês.
              type: integer
            frequency:
              description: Modo de cobrança dos juros.
              enum:
              - DAILY
              - MONTHLY
              - ANNUAL
              type: string
        instructions:
          description: Instruções do boleto.
          type: string
    BempaggoBankTransferResponse:
      description: Detalhes da transferência bancária
      type: object
      properties:
        accountNumber:
          description: Número da conta bancária
          type: string
          example: "123456789"
        bankCode:
          description: Código do banco
          type: string
          example: "001"
        bankName:
          description: Nome do banco
          type: string
          example: Banco Bempaggo
        bankBranchNumber:
          description: Número da agência bancária
          type: string
          example: "1234"
        bankBranchCheckDigit:
          description: Dígito verificador da agência bancária
          type: string
          example: "5"
        document:
          description: Documento do titular da conta
          type: string
          example: 123.456.789-00
        type:
          description: Tipo da conta bancária
          type: string
          example: CORRENTE
    BempaggoTransactionTransferV2Response:
      description: Representação de uma transação no sistema Bempaggo.
      type: object
      properties:
        tid:
          description: Identificador único da transação.
          type: string
          example: "123218329839128"
        orderReferenceId:
          description: Número de referência do pedido associado à transação.
          type: string
          example: ORDER-0001
        chargeId:
          format: int64
          description: Número de referência da cobrança associado à transação.
          type: integer
          example: 2
    BempaggoTransferV2Response:
      description: Objeto de resposta para transferência Bempaggo
      type: object
      properties:
        id:
          description: Identificador único da transferência
          type: string
          example: "12345"
        amount:
          format: int64
          description: Quantia da transferência
          type: integer
          example: 1000
        confirmed:
          description: Status de confirmação da transferência
          type: string
          example: "true"
        status:
          description: Status atual da transferência
          type: string
          example: COMPLETED
        type:
          description: Tipo da transferência
          type: string
          example: INTERNAL
        createdAt:
          format: int64
          description: Timestamp de quando a transferência foi criada em milissegundos
          type: integer
          example: 1622470423000
        transferNumber:
          description: Número da transferência
          type: string
          example: T123456789
        transferDate:
          format: int64
          description: Data da transferência em timestamp de milissegundos
          type: integer
          example: 1622470423000
        originalAmount:
          format: int64
          description: Quantia original antes de quaisquer deduções
          type: integer
          example: 1100
        bank:
          description: Detalhes da transferência bancária
          type: object
          allOf:
          - $ref: "#/components/schemas/BempaggoBankTransferResponse"
    BempaggoVersionType:
      enum:
      - DEFAULT
      - EVEREST
      type: string
    CardChargeV2Request:
      required:
      - cardNumber
      - holder
      - expiration
      type: object
      properties:
        cardNumber:
          description: Número do cartão de crédito.
          maxLength: 21
          minLength: 11
          pattern: \d+
          type: string
          example: "5448280000000007"
        cvv:
          description: CVV do cartão de crédito.
          maxLength: 4
          minLength: 3
          pattern: \d+
          type: string
          example: "123"
        holder:
          description: Dados do portador do cartão de crédito.
          type: object
          allOf:
          - $ref: "#/components/schemas/HolderCardV2Request"
        expiration:
          description: Validade do cartão de crédito.
          type: object
          allOf:
          - $ref: "#/components/schemas/ExpirationCardV2Request"
    CardSettingsV2Request:
      description: Configurações do Cartão
      required:
      - maxInstallments
      - feePassThrough
      type: object
      properties:
        maxInstallments:
          format: int32
          description: Número máximo de parcelas permitidas
          maximum: 12
          minimum: 1
          type: integer
          example: 6
        feePassThrough:
          description: Indica se a taxa será repassada ao cliente
          type: boolean
          example: true
        softDescriptor:
          description: Descrição na fatura do cartão de crédito.
          maxLength: 13
          type: string
          example: BEMPAGGO
    CardTokenV2Request:
      required:
      - cardNumber
      - holder
      - expiration
      type: object
      properties:
        cardNumber:
          description: Número do cartão de crédito.
          maxLength: 21
          minLength: 11
          pattern: \d+
          type: string
          example: "5448280000000007"
        holder:
          description: Dados do portador do cartão de crédito.
          type: object
          allOf:
          - $ref: "#/components/schemas/HolderCardV2Request"
        expiration:
          description: Validade do cartão de crédito.
          type: object
          allOf:
          - $ref: "#/components/schemas/ExpirationCardV2Request"
    CollectionMethodTypes:
      enum:
      - AUTOMATIC_CHARGE
      - SEND_INVOICE
      type: string
    CreditCardPaymentV2Request:
      title: Cartão de crédito
      description: Dados de pagamento com cartão de crédito
      required:
      - amount
      - paymentMethod
      - installments
      type: object
      properties:
        amount:
          format: int64
          description: Valor da cobrança em centavos.
          minimum: 1
          type: integer
          example: 1000
        paymentMethod:
          description: Método de pagamento
          enum:
          - CREDIT_CARD
          - BOLETO
          - PIX
          - DEBIT_CARD
          - VOUCHER
          - TRANSFER
          - WALLET
          type: string
        splits:
          description: Regras de divisão do recebimento do valor
          type: array
          items:
            required:
            - amount
            - sellerId
            type: object
            properties:
              amount:
                format: int64
                description: Quantia em centavos recebidos que será do vendedor (loja)
                minimum: 1
                type: integer
                example: 1000
              sellerId:
                format: int64
                minimum: 1
                type: integer
              absorbFee:
                description: Se TRUE o recebedor será responsável por absorver as
                  taxas de intermediação.
                type: boolean
        installments:
          format: int32
          description: Número de parcelas.
          maximum: 12
          minimum: 1
          type: integer
          example: 1
        cardToken:
          description: Token do cartão de crédito.
          required:
          - token
          type: object
          properties:
            token:
              description: Token do cartão gerado com a API /v2/cards/tokens.
              type: string
            cvv:
              description: CVV do cartão de crédito.
              maxLength: 4
              minLength: 3
              pattern: \d+
              type: string
              example: "123"
        dataOnly:
          $ref: "#/components/schemas/GatewayDataOnlyRequest"
    CustomerChargeMinimumV2Response:
      description: Informações do Cliente
      required:
      - id
      - name
      - document
      - email
      type: object
      properties:
        id:
          format: int32
          description: ID do cliente
          type: integer
          example: 12345
        name:
          description: Nome do cliente
          type: string
          example: João da Silva
        document:
          description: Documento do cliente (CPF/CNPJ)
          type: string
          example: "12345678900"
        email:
          description: Email do cliente
          type: string
          example: joao.silva@example.com
        phone:
          description: Informações do celular
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneV2Response"
    CustomerChargeV2Request:
      required:
      - name
      - document
      type: object
      properties:
        name:
          description: Nome do cliente.
          maxLength: 50
          minLength: 1
          type: string
          example: Tony Stark
        document:
          description: CPF/CNPJ do cliente.
          type: string
          example: "51190844001"
        birthdate:
          format: YYYY-MM-DD
          description: Data de nascimento do cliente.
          type: string
          example: 2000-01-01
        phone:
          description: Telefone do cliente.
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneV2Request"
        email:
          description: Email do cliente.
          type: string
        address:
          description: Endereço do cliente.
          type: object
          allOf:
          - $ref: "#/components/schemas/AddressV2Request"
    Date:
      format: date
      type: string
      example: 2022-03-10
    DeviceDataOnlyRequest:
      required:
      - colorDepth
      - deviceType3ds
      - javaEnabled
      - language
      - screenHeight
      - screenWidth
      - timeZoneOffset
      - deviceFingerprint
      type: object
      properties:
        colorDepth:
          format: int32
          description: colorDepth
          type: integer
          example: 1
        deviceType3ds:
          description: deviceType3ds
          type: object
          example: BROWSER
        javaEnabled:
          description: se executa java no navegador
          type: boolean
          example: true
        language:
          description: Linguagem do navegador veja referência https://www.rfc-editor.org/rfc/bcp/bcp47.txt
          type: string
          example: BR
        screenHeight:
          format: int32
          description: Altura da tela em pixel
          minimum: 0
          type: integer
          example: 500
        screenWidth:
          format: int32
          description: Largura da tela em pixel
          minimum: 0
          type: integer
          example: 500
        timeZoneOffset:
          format: int32
          description: Diferença de horas em relação ao UTC
          minimum: 0
          type: integer
          example: 3
        deviceFingerprint:
          description: Impressão digital do dispositivo
          type: string
    ErrorFieldV2Message:
      type: object
      properties:
        field:
          description: Nome do campo.
          type: string
        message:
          description: Mensagem detalhada do erro.
          type: string
    ExpirationCardV2Request:
      required:
      - year
      - month
      type: object
      properties:
        year:
          format: int32
          description: Ano de validade do cartão de crédito.
          maximum: 2056
          minimum: 2023
          type: integer
          example: 2035
        month:
          format: int32
          description: Mês de validade do cartão de crédito.
          maximum: 12
          minimum: 1
          type: integer
          example: "01"
    GatewayAccountTypes:
      enum:
      - CHECKING
      - SAVINGS
      type: string
    GatewayCountryTypes:
      enum:
      - AFGHANISTAN
      - ALAND_ISLANDS
      - ALBANIA
      - ALGERIA
      - AMERICAN_SAMOA
      - ANDORRA
      - ANGOLA
      - ANGUILLA
      - ANTARCTICA
      - ANTIGUA_AND_BARBUDA
      - ARGENTINA
      - ARMENIA
      - ARUBA
      - AUSTRALIA
      - AUSTRIA
      - AZERBAIJAN
      - BAHAMAS
      - BAHRAIN
      - BANGLADESH
      - BARBADOS
      - BELARUS
      - BELGIUM
      - BELIZE
      - BENIN
      - BERMUDA
      - BHUTAN
      - BOLIVIA
      - BOSNIA_AND_HERZEGOVINA
      - BOTSWANA
      - BOUVET_ISLAND
      - BRAZIL
      - BRITISH_INDIAN_OCEAN_TERRITORY
      - BRITISH_VIRGIN_ISLANDS
      - BRUNEI
      - BULGARIA
      - BURKINA_FASO
      - BURUNDI
      - CAMBODIA
      - CAMEROON
      - CANADA
      - CAPE_VERDE
      - CARIBBEAN_NETHERLANDS
      - CAYMAN_ISLANDS
      - CENTRAL_AFRICAN_REPUBLIC
      - CHAD
      - CHILE
      - CHINA
      - CHRISTMAS_ISLAND
      - COCOS_KEELING_ISLANDS
      - COLOMBIA
      - COMOROS
      - COOK_ISLANDS
      - COSTA_RICA
      - CROATIA
      - CUBA
      - CURACAO
      - CYPRUS
      - CZECHIA
      - DENMARK
      - DJIBOUTI
      - DOMINICA
      - DOMINICAN_REPUBLIC
      - DR_CONGO
      - ECUADOR
      - EGYPT
      - EL_SALVADOR
      - EQUATORIAL_GUINEA
      - ERITREA
      - ESTONIA
      - ESWATINI
      - ETHIOPIA
      - FALKLAND_ISLANDS
      - FAROE_ISLANDS
      - FIJI
      - FINLAND
      - FRANCE
      - FRENCH_GUIANA
      - FRENCH_POLYNESIA
      - FRENCH_SOUTHERN_AND_ANTARCTIC_LANDS
      - GABON
      - GAMBIA
      - GEORGIA
      - GERMANY
      - GHANA
      - GIBRALTAR
      - GREECE
      - GREENLAND
      - GRENADA
      - GUADELOUPE
      - GUAM
      - GUATEMALA
      - GUERNSEY
      - GUINEA
      - GUINEA_BISSAU
      - GUYANA
      - HAITI
      - HEARD_ISLAND_AND_MCDONALD_ISLANDS
      - HONDURAS
      - HONG_KONG
      - HUNGARY
      - ICELAND
      - INDIA
      - INDONESIA
      - IRAN
      - IRAQ
      - IRELAND
      - ISLE_OF_MAN
      - ISRAEL
      - ITALY
      - IVORY_COAST
      - JAMAICA
      - JAPAN
      - JERSEY
      - JORDAN
      - KAZAKHSTAN
      - KENYA
      - KIRIBATI
      - KOSOVO
      - KUWAIT
      - KYRGYZSTAN
      - LAOS
      - LATVIA
      - LEBANON
      - LESOTHO
      - LIBERIA
      - LIBYA
      - LIECHTENSTEIN
      - LITHUANIA
      - LUXEMBOURG
      - MACAU
      - MADAGASCAR
      - MALAWI
      - MALAYSIA
      - MALDIVES
      - MALI
      - MALTA
      - MARSHALL_ISLANDS
      - MARTINIQUE
      - MAURITANIA
      - MAURITIUS
      - MAYOTTE
      - MEXICO
      - MICRONESIA
      - MOLDOVA
      - MONACO
      - MONGOLIA
      - MONTENEGRO
      - MONTSERRAT
      - MOROCCO
      - MOZAMBIQUE
      - MYANMAR
      - NAMIBIA
      - NAURU
      - NEPAL
      - NETHERLANDS
      - NEW_CALEDONIA
      - NEW_ZEALAND
      - NICARAGUA
      - NIGER
      - NIGERIA
      - NIUE
      - NORFOLK_ISLAND
      - NORTHERN_MARIANA_ISLANDS
      - NORTH_KOREA
      - NORTH_MACEDONIA
      - NORWAY
      - OMAN
      - PAKISTAN
      - PALAU
      - PALESTINE
      - PANAMA
      - PAPUA_NEW_GUINEA
      - PARAGUAY
      - PERU
      - PHILIPPINES
      - PITCAIRN_ISLANDS
      - POLAND
      - PORTUGAL
      - PUERTO_RICO
      - QATAR
      - REPUBLIC_OF_THE_CONGO
      - REUNION
      - ROMANIA
      - RUSSIA
      - RWANDA
      - SAINT_BARTHELEMY
      - SAINT_HELENA_ASCENSION_AND_TRISTAN_DA_CUNHA
      - SAINT_KITTS_AND_NEVIS
      - SAINT_LUCIA
      - SAINT_MARTIN
      - SAINT_PIERRE_AND_MIQUELON
      - SAINT_VINCENT_AND_THE_GRENADINES
      - SAMOA
      - SAN_MARINO
      - SAO_TOME_AND_PRINCIPE
      - SAUDI_ARABIA
      - SENEGAL
      - SERBIA
      - SEYCHELLES
      - SIERRA_LEONE
      - SINGAPORE
      - SINT_MAARTEN
      - SLOVAKIA
      - SLOVENIA
      - SOLOMON_ISLANDS
      - SOMALIA
      - SOUTH_AFRICA
      - SOUTH_GEORGIA
      - SOUTH_KOREA
      - SOUTH_SUDAN
      - SPAIN
      - SRI_LANKA
      - SUDAN
      - SURINAME
      - SVALBARD_AND_JAN_MAYEN
      - SWEDEN
      - SWITZERLAND
      - SYRIA
      - TAIWAN
      - TAJIKISTAN
      - TANZANIA
      - THAILAND
      - TIMOR_LESTE
      - TOGO
      - TOKELAU
      - TONGA
      - TRINIDAD_AND_TOBAGO
      - TUNISIA
      - TURKEY
      - TURKMENISTAN
      - TURKS_AND_CAICOS_ISLANDS
      - TUVALU
      - UGANDA
      - UKRAINE
      - UNITED_ARAB_EMIRATES
      - UNITED_KINGDOM
      - UNITED_STATES
      - UNITED_STATES_MINOR_OUTLYING_ISLANDS
      - UNITED_STATES_VIRGIN_ISLANDS
      - URUGUAY
      - UZBEKISTAN
      - VANUATU
      - VATICAN_CITY
      - VENEZUELA
      - VIETNAM
      - WALLIS_AND_FUTUNA
      - WESTERN_SAHARA
      - YEMEN
      - ZAMBIA
      - ZIMBABWE
      type: string
    GatewayDataOnlyRequest:
      required:
      - device
      - onFailure
      - ipAddress
      - billing
      - challenge
      - successUrl
      - failureUrl
      - userAgent
      - embedded
      type: object
      properties:
        device:
          description: Dispositivo
          type: object
          allOf:
          - $ref: "#/components/schemas/DeviceDataOnlyRequest"
        onFailure:
          description: O que fazer quando ocorre uma falha no data only
          type: object
          example: CONTINUE
        ipAddress:
          description: Endereço de IPv4 do cliente
          pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}$"
          type: string
          example: 10.0.0.1
        billing:
          description: Informações do portador do cartão
          type: object
          allOf:
          - $ref: "#/components/schemas/HolderBillingDataOnlyRequest"
          example: CONTINUE
        challenge:
          description: Tipo de desafio
          type: object
          example: DATA_ONLY
        successUrl:
          description: Url de sucesso
          type: object
          example: https://meusite.com
        failureUrl:
          description: Url de falha
          type: object
          example: https://meusite.com
        userAgent:
          description: Agente ou navegador
          type: string
          example: Mozilla
        embedded:
          description: Se usa o MDI da adquirente
          type: boolean
          example: true
    GatewayReceivableStatus:
      enum:
      - PENDING
      - PAID
      - CANCELED
      - REFUNDED
      type: string
    HolderBillingDataOnlyRequest:
      required:
      - address
      - phone
      - email
      type: object
      properties:
        address:
          description: Endereço do portador do cartão
          type: object
          allOf:
          - $ref: "#/components/schemas/AddressV2Request"
        phone:
          description: Telefone do portador do cartão
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneV2DataOnlyRequest"
        email:
          description: E-mail do portador do cartão
          type: string
    HolderCardV2Request:
      required:
      - name
      type: object
      properties:
        name:
          description: Nome do titular do cartão de crédito.
          maxLength: 45
          minLength: 1
          type: string
          example: Tony Stark
        document:
          description: CPF/CNPJ do titular do cartão de crédito.
          type: string
          example: "51190844001"
    InvoiceCardSettingV2Response:
      type: object
      properties:
        feePassThrough:
          type: boolean
        maxInstallments:
          format: int32
          type: integer
        softDescriptor:
          type: string
    InvoiceFilterRequest:
      description: Parâmetros de filtro para busca de faturas
      type: object
      properties:
        invoiceNumber:
          description: Número da fatura
          type: string
          example: INV-2023-0001
        dueDateFrom:
          format: int64
          description: Data inicial de vencimento da fatura em milissegundos desde
            a época (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        dueDateTo:
          format: int64
          description: Data final de vencimento da fatura em milissegundos desde a
            época (1970-01-01T00:00:00Z)
          type: integer
          example: 1658539200000
        closeDateFrom:
          format: int64
          description: Data inicial de fechamento da fatura em milissegundos desde
            a época (1970-01-01T00:00:00Z)
          type: integer
          example: 1657949200000
        closeDateTo:
          format: int64
          description: Data final de fechamento da fatura em milissegundos desde a
            época (1970-01-01T00:00:00Z)
          type: integer
          example: 1658539200000
        status:
          description: Status da fatura
          type: array
          items:
            $ref: "#/components/schemas/InvoiceStatus"
          example: PENDING
        document:
          description: Documento do cliente (CPF/CNPJ)
          type: string
          example: 123.456.789-00
        affiliateIDs:
          type: array
          items:
            format: int64
            type: integer
    InvoiceFullV2Response:
      description: Resposta da Fatura
      required:
      - id
      - dueDate
      - invoiceNumber
      - status
      - customer
      - paymentUrl
      - amount
      - acceptedPaymentMethods
      - affiliate
      type: object
      properties:
        id:
          format: int64
          description: ID da fatura
          type: integer
          example: 123456
        dueDate:
          format: int64
          description: Data de vencimento da fatura em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        invoiceNumber:
          description: Número da fatura
          type: string
          example: INV-2023-0001
        status:
          description: Status da fatura
          type: string
          allOf:
          - $ref: "#/components/schemas/InvoiceStatus"
          example: PENDING
        closeDate:
          format: int64
          description: Data de fechamento da fatura em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657949200000
        customer:
          description: Informações do cliente
          type: object
          allOf:
          - $ref: "#/components/schemas/CustomerChargeMinimumV2Response"
        paymentUrl:
          description: URL de pagamento
          type: string
        amount:
          format: int64
          description: Valor da fatura em centavos.
          type: integer
        successUrl:
          description: Url para redirecionamento após sucesso no pagamento.
          type: string
          example: https://meusite.com.br/obrigado
        acceptedPaymentMethods:
          description: Informações de pagamento
          type: string
          items:
            $ref: "#/components/schemas/InvoicePaymentMethodV2Response"
        paymentLimitDate:
          format: int64
          description: Data limite para pagamento da fatura em milissegundos desde
            a época (1970-01-01T00:00:00Z)
          type: integer
          example: 1657949200000
        createdAt:
          format: int64
          description: Data de criação da fatura em milissegundos desde a época (1970-01-01T00:00:00Z)
          type: integer
          example: 1657949200000
        affiliate:
          description: Informações da loja
          type: object
          allOf:
          - $ref: "#/components/schemas/AffiliateMinimalV2Response"
        recurrentInvoiceId:
          format: int64
          type: integer
    InvoiceItemV2Request:
      description: Item da Fatura
      required:
      - productId
      - quantity
      - unitPriceInCents
      type: object
      properties:
        productId:
          format: int32
          description: ID do produto
          type: integer
          example: 101
        quantity:
          format: int32
          description: Quantidade do produto
          type: integer
          example: 2
        unitPriceInCents:
          format: int64
          description: Preço unitário do produto em centavos
          type: integer
          example: 1999
    InvoicePaymentMethodRequest:
      required:
      - method
      - amountOff
      type: object
      properties:
        method:
          description: Método de pagamento
          type: string
          allOf:
          - $ref: "#/components/schemas/PaymentProfiles"
          example: CREDIT_CARD
        amountOff:
          format: int64
          description: "Valor de desconto em centavos, exemplo: 105 = R$ 1,05"
          type: integer
          example: 105
        cardSettings:
          description: Configurações do cartão
          type: object
          allOf:
          - $ref: "#/components/schemas/CardSettingsV2Request"
        pixSettings:
          description: Configurações do pix
          type: object
          allOf:
          - $ref: "#/components/schemas/PixSettingsV2Request"
    InvoicePaymentMethodV2Response:
      type: object
      properties:
        method:
          $ref: "#/components/schemas/PaymentProfiles"
        amountOff:
          format: int64
          type: integer
        cardSettings:
          $ref: "#/components/schemas/InvoiceCardSettingV2Response"
        pixSettings:
          $ref: "#/components/schemas/InvoicePixSettingV2Response"
    InvoicePixSettingV2Response:
      type: object
      properties:
        expiresIn:
          format: int32
          type: integer
    InvoiceStatus:
      enum:
      - OPEN
      - CLOSED
      - PAID
      - VOID
      - UNCOLLECTIBLE
      - DELETED
      type: string
    InvoiceV2Request:
      description: Requisição de Fatura
      required:
      - customerId
      - invoiceNumber
      - items
      - acceptedPaymentMethods
      - dueDate
      type: object
      properties:
        customerId:
          format: int32
          description: ID do cliente
          type: integer
          example: 12345
        invoiceNumber:
          description: Número da fatura
          type: string
          example: INV-2023-0001
        items:
          description: Lista de itens da fatura
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItemV2Request"
        acceptedPaymentMethods:
          description: Lista de métodos de pagamento aceitos
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/InvoicePaymentMethodRequest"
        dueDate:
          format: int64
          description: Data de vencimento da fatura em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        paymentLimitDate:
          format: int64
          description: Data limite de pagamento pagamento da fatura em milissegundos
            desde a época (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        notificationUrl:
          format: uri
          description: URL que receberá todas as notificações do pedido.
          type: string
          example: https://meusite.com.br/events
        successUrl:
          format: uri
          description: Url para redirecionamento após sucesso no pagamento.
          type: string
          example: https://meusite.com.br/obrigado
    InvoiceV2Response:
      description: Resposta da Fatura
      required:
      - id
      - dueDate
      - invoiceNumber
      - status
      - customer
      - paymentUrl
      - amount
      type: object
      properties:
        id:
          format: int64
          description: ID da fatura
          type: integer
          example: 123456
        dueDate:
          format: int64
          description: Data de vencimento da fatura em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        invoiceNumber:
          description: Número da fatura
          type: string
          example: INV-2023-0001
        status:
          description: Status da fatura
          type: string
          allOf:
          - $ref: "#/components/schemas/InvoiceStatus"
          example: PENDING
        closeDate:
          format: int64
          description: Data de fechamento da fatura em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657949200000
        customer:
          description: Informações do cliente
          type: object
          allOf:
          - $ref: "#/components/schemas/CustomerChargeMinimumV2Response"
        paymentUrl:
          description: URL de pagamento
          type: string
        amount:
          format: int64
          description: Valor da fatura em centavos.
          type: integer
        successUrl:
          description: Url para redirecionamento após sucesso no pagamento.
          type: string
          example: https://meusite.com.br/obrigado
    MultipartFile:
      type: object
      properties:
        name:
          type: string
        originalFilename:
          type: string
        contentType:
          type: string
        empty:
          type: boolean
        size:
          format: int64
          type: integer
        bytes:
          format: binary
          type: string
        inputStream:
          format: binary
          type: string
        resource:
          type: object
    NameV2Request:
      required:
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          description: Primeiros nomes do recebedor.
          type: string
        lastName:
          description: Sobrenomes do recebedor.
          type: string
    OneTimeOrderV2Request:
      required:
      - amount
      - customer
      - payments
      type: object
      properties:
        orderReference:
          description: "Número de referência externo, possibilitando a realização\
            \ de pesquisa. Único."
          maxLength: 32
          minLength: 4
          type: string
          example: Order-123456A
        amount:
          format: int64
          description: Valor da cobrança em centavos.
          minimum: 0
          type: integer
          example: 1000
        customer:
          description: Dados do cliente.
          required:
          - name
          - document
          type: object
          properties:
            name:
              description: Nome do cliente.
              maxLength: 50
              minLength: 1
              type: string
              example: Tony Stark
            document:
              description: CPF/CNPJ do cliente.
              type: string
              example: "51190844001"
            birthdate:
              format: YYYY-MM-DD
              description: Data de nascimento do cliente.
              type: string
              example: 2000-01-01
            phone:
              description: Telefone do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/PhoneV2Request"
            email:
              description: Email do cliente.
              type: string
            address:
              description: Endereço do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/AddressV2Request"
        payments:
          description: Dados do pagamento.
          maxItems: 2
          minItems: 1
          type: array
          items:
            required:
            - amount
            - paymentMethod
            type: object
            properties:
              amount:
                format: int64
                description: Valor da cobrança em centavos.
                minimum: 1
                type: integer
                example: 1000
              paymentMethod:
                description: Método de pagamento
                enum:
                - CREDIT_CARD
                - BOLETO
                - PIX
                - DEBIT_CARD
                - VOUCHER
                - TRANSFER
                - WALLET
                type: string
              splits:
                description: Regras de divisão do recebimento do valor
                type: array
                items:
                  required:
                  - amount
                  - sellerId
                  type: object
                  properties:
                    amount:
                      format: int64
                      description: Quantia em centavos recebidos que será do vendedor
                        (loja)
                      minimum: 1
                      type: integer
                      example: 1000
                    sellerId:
                      format: int64
                      minimum: 1
                      type: integer
                    absorbFee:
                      description: Se TRUE o recebedor será responsável por absorver
                        as taxas de intermediação.
                      type: boolean
          oneOf:
          - $ref: "#/components/schemas/CreditCardPaymentV2Request"
          - $ref: "#/components/schemas/BankSlipPaymentV2Request1"
          - $ref: "#/components/schemas/PixPaymentV2Request"
          discriminator:
            propertyName: paymentMethod
        notificationUrl:
          format: uri
          description: URL que receberá todas as notificações do pedido.
          type: string
          example: https://meusite.com.br/events
        splitMode:
          $ref: "#/components/schemas/SplitModes"
        metadata:
          description: Metadados
          type: object
          additionalProperties: {}
        softDescriptor:
          description: Descrição na fatura do cartão de crédito.
          maxLength: 10
          type: string
          example: BEMPAGGO
    OnetimeChargeV2Request:
      required:
      - customer
      - value
      - installments
      type: object
      properties:
        customer:
          description: Dados do cliente.
          required:
          - name
          - document
          type: object
          properties:
            name:
              description: Nome do cliente.
              maxLength: 50
              minLength: 1
              type: string
              example: Tony Stark
            document:
              description: CPF/CNPJ do cliente.
              type: string
              example: "51190844001"
            birthdate:
              format: YYYY-MM-DD
              description: Data de nascimento do cliente.
              type: string
              example: 2000-01-01
            phone:
              description: Telefone do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/PhoneV2Request"
            email:
              description: Email do cliente.
              type: string
            address:
              description: Endereço do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/AddressV2Request"
        affiliateId:
          format: int64
          description: id da loja
          minimum: 0
          type: integer
          example: 1000
        card:
          description: Dados do cartão de crédito ou token requer.
          required:
          - cardNumber
          - holder
          - expiration
          type: object
          properties:
            cardNumber:
              description: Número do cartão de crédito.
              maxLength: 21
              minLength: 11
              pattern: \d+
              type: string
              example: "5448280000000007"
            cvv:
              description: CVV do cartão de crédito.
              maxLength: 4
              minLength: 3
              pattern: \d+
              type: string
              example: "123"
            holder:
              description: Dados do portador do cartão de crédito.
              type: object
              allOf:
              - $ref: "#/components/schemas/HolderCardV2Request"
            expiration:
              description: Validade do cartão de crédito.
              type: object
              allOf:
              - $ref: "#/components/schemas/ExpirationCardV2Request"
        value:
          format: int64
          description: Valor da cobrança em centavos.
          minimum: 0
          type: integer
          example: 1000
        installments:
          format: int32
          description: Número de parcelas.
          maximum: 12
          minimum: 1
          type: integer
          example: 1
        yourReferenceId:
          format: int64
          description: "Número de referência externo, possibilitando a realização\
            \ de pesquisa."
          minimum: 1
          type: integer
          example: 123456
        notificationUrl:
          description: URL que receberá todas as notificações do pedido.
          type: string
          example: https://meusite.com.br/events
        dataOnly:
          $ref: "#/components/schemas/GatewayDataOnlyRequest"
    PagePayV2Response:
      type: object
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        amount:
          format: int64
          type: integer
        returnUrl:
          type: string
        uuid:
          type: string
        sold:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        expiration:
          format: int64
          type: integer
        active:
          type: boolean
        addressRequired:
          type: boolean
        birthdateRequired:
          type: boolean
        sendEmail:
          type: boolean
        affiliateMinimal:
          type: object
        url:
          format: uri
          type: string
        methods:
          type: array
          items:
            $ref: "#/components/schemas/PaymentTypes"
        theme:
          $ref: "#/components/schemas/ThemeCheckoutMinimalV2Response"
        feePassThrough:
          type: boolean
    PaymentProfiles:
      enum:
      - CREDIT_CARD
      - PIX
      - BANK_SLIP
      - TRANSFER
      - NUPAY
      - CHECKOUT
      - MANUAL_DISCHARGE
      type: string
    PaymentTypes:
      enum:
      - CREDIT_CARD
      - PIX
      - BANK_SLIP
      - TRANSFER
      - NUPAY
      type: string
    PhoneRequestV2:
      type: object
      properties:
        countryCode:
          type: string
        areaCode:
          type: string
        number:
          type: string
    PhoneV2DataOnlyRequest:
      required:
      - country
      - areaCode
      - number
      type: object
      properties:
        country:
          description: País
          type: string
          allOf:
          - $ref: "#/components/schemas/GatewayCountryTypes"
          example: BRAZIL
        areaCode:
          description: Código de área
          type: string
          example: "11"
        number:
          description: Número do telefone
          type: string
          example: "988957195"
    PhoneV2Request:
      required:
      - countryCode
      - areaCode
      - number
      type: object
      properties:
        countryCode:
          format: int32
          type: integer
        areaCode:
          format: int32
          maximum: 99
          minimum: 11
          type: integer
        number:
          format: int32
          maximum: 999999999
          minimum: 10000000
          type: integer
    PhoneV2Response:
      type: object
      properties:
        countryCode:
          type: string
        areaCode:
          type: string
        number:
          type: string
    PixPaymentV2Request:
      title: PIX
      description: Dados de pagamento com Pix
      required:
      - amount
      - paymentMethod
      - desiredExpirationDate
      type: object
      properties:
        amount:
          format: int64
          description: Valor da cobrança em centavos.
          minimum: 1
          type: integer
          example: 1000
        paymentMethod:
          description: Método de pagamento
          enum:
          - CREDIT_CARD
          - BOLETO
          - PIX
          - DEBIT_CARD
          - VOUCHER
          - TRANSFER
          - WALLET
          type: string
        splits:
          description: Regras de divisão do recebimento do valor
          type: array
          items:
            required:
            - amount
            - sellerId
            type: object
            properties:
              amount:
                format: int64
                description: Quantia em centavos recebidos que será do vendedor (loja)
                minimum: 1
                type: integer
                example: 1000
              sellerId:
                format: int64
                minimum: 1
                type: integer
              absorbFee:
                description: Se TRUE o recebedor será responsável por absorver as
                  taxas de intermediação.
                type: boolean
        desiredExpirationDate:
          format: int64
          description: "Data de expiração do QRCode em milissegundos, representando\
            \ um timestamp."
          type: integer
        description:
          type: string
    PixSettingsV2Request:
      type: object
      properties:
        expiresIn:
          format: int32
          description: Tempo de expiração do QRCode do PIX em segundos.
          type: integer
          example: 120
    PlanFrequency:
      enum:
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      - BIMONTHLY
      - QUARTERLY
      - SEMESTRAL
      - YEARLY
      type: string
    ProductType:
      enum:
      - ONETIME
      - RECURRING
      type: string
    ProductV2Request:
      description: Requisição para criação de produto
      required:
      - productType
      - affiliateId
      - name
      - value
      - maxInstallments
      - methods
      - themeId
      type: object
      properties:
        productType:
          description: Tipo do produto
          type: string
          allOf:
          - $ref: "#/components/schemas/ProductType"
          example: ONETIME
        affiliateId:
          format: int64
          description: ID do seller
          type: integer
          example: 12345
        name:
          description: Nome do produto
          maxLength: 45
          minLength: 5
          type: string
          example: Produto Exemplo
        value:
          format: int64
          description: Valor do produto
          minimum: 5
          type: integer
          example: 500
        softDescriptor:
          description: Idenficação do produto na fatura do cartão.
          maxLength: 13
          minLength: 1
          type: string
          example: Product Plus
        maxInstallments:
          format: int32
          description: Número máximo de parcelas
          type: integer
          example: 12
        active:
          description: Indica se o produto está ativo
          type: boolean
          example: true
        expirationDate:
          format: int64
          description: Data de expiração do produto em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        methods:
          description: Métodos de pagamento aceitos
          type: array
          items:
            $ref: "#/components/schemas/PaymentTypes"
        description:
          description: Descrição do produto
          maxLength: 150
          minLength: 1
          type: string
          example: Este é um produto exemplo.
        themeId:
          format: int64
          description: ID do tema do produto
          type: integer
          example: 1
        feePassThrough:
          description: Indica se a taxa será repassada ao cliente
          type: boolean
          example: false
    ProductV2Response:
      description: Resposta detalhada de um produto.
      type: object
      properties:
        id:
          format: int32
          description: ID do produto
          type: integer
          example: 12345
        name:
          description: Nome do produto
          type: string
          example: Produto Exemplo
        value:
          format: int64
          description: Valor do produto em centavos
          type: integer
          example: 500
        active:
          description: Indica se o produto está ativo
          type: boolean
          example: true
        type:
          description: Tipo do produto
          type: string
          allOf:
          - $ref: "#/components/schemas/ProductType"
          example: ONETIME
        checkout:
          description: Detalhes do checkout do produto
          type: object
          allOf:
          - $ref: "#/components/schemas/PagePayV2Response"
        maxInstallments:
          format: int32
          description: Número máximo de parcelas
          type: integer
          example: 12
        maxCharges:
          format: int32
          description: Número máximo de cobranças para um produto recorrente
          type: integer
          example: 12
        softDescriptor:
          description: Identificação do produto na fatura do cartão.
          type: string
          example: Product Plus
    ProductV2UpdateRequest:
      required:
      - addressRequired
      - birthDateRequired
      - name
      - value
      - maxInstallments
      - themeId
      type: object
      properties:
        addressRequired:
          description: Indica se o endereço é obrigatório
          type: boolean
          example: true
        birthDateRequired:
          description: Indica se a data de nascimento é obrigatória
          type: boolean
          example: true
        name:
          description: Nome do produto
          maxLength: 45
          minLength: 5
          type: string
          example: Produto Exemplo
        value:
          format: int64
          description: Valor do produto em centavos.
          minimum: 5
          type: integer
          example: 500
        softDescriptor:
          description: Identificação do produto na fatura do cartão.
          maxLength: 13
          minLength: 1
          type: string
          example: Product Plus
        maxInstallments:
          format: int32
          description: Número máximo de parcelas
          type: integer
          example: 12
        active:
          description: Indica se o produto está ativo
          type: boolean
          example: true
        expirationDate:
          format: int64
          description: Data de expiração do produto em milissegundos desde a época
            (1970-01-01T00:00:00Z)
          type: integer
          example: 1657852800000
        description:
          description: Descrição do produto
          maxLength: 150
          minLength: 1
          type: string
          example: Este é um produto exemplo.
        themeId:
          format: int64
          description: ID do tema do produto
          type: integer
          example: 1
        feePassThrough:
          description: Indica se a taxa será repassada ao cliente
          type: boolean
          example: false
    ReceivablesV2Response:
      description: Detalhes dos recebíveis
      type: object
      properties:
        amount:
          format: int64
          description: Valor do recebível
          type: integer
          example: 1000
        grossAmount:
          format: int64
          description: Valor bruto do recebível
          type: integer
          example: 1200
        anticipationFee:
          format: int64
          description: Taxa de antecipação do recebível
          type: integer
          example: 50
        status:
          description: Status do recebível
          type: string
          allOf:
          - $ref: "#/components/schemas/GatewayReceivableStatus"
          example: PENDING
        expectedOn:
          format: int64
          description: Data esperada para recebimento
          type: integer
          example: 1657852800000
        installment:
          format: int32
          description: Número da parcela
          type: integer
          example: 12
        transaction:
          description: ID da transação na adquirente
          type: string
          example: fb96375468744e82999b089924ee01f7
    ReceiverCnpjV2Request:
      required:
      - owner
      - businessName
      - businessPhone
      - businessEmail
      - document
      - openingDate
      - businessAddress
      - mcc
      - softDescriptor
      - bankAccount
      type: object
      properties:
        owner:
          description: Proprietário recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/ReceiverOwnerV2Request"
        businessName:
          description: Nome da empresa recebera.
          type: string
          example: Apple
        businessPhone:
          description: Telefone da empresa recebedora.
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneRequestV2"
        businessEmail:
          description: Email da empresa recebedora.
          type: string
        document:
          description: CNPJ do recebedor.
          maxLength: 14
          minLength: 14
          pattern: \d+
          type: string
          example: "27213098000111"
        openingDate:
          format: YYYY-MM-DD
          description: Data de abertura da empresa recebedora.
          type: string
          example: 2000-01-21
        businessAddress:
          description: Endereço da empresa recebedora.
          type: object
          allOf:
          - $ref: "#/components/schemas/AddressV2Request"
        mcc:
          format: int32
          description: MCC do recebedor veja lista.
          type: integer
        softDescriptor:
          description: Nome que aparece na fatura
          type: string
        bankAccount:
          description: Conta bancária da empresa recebedora.
          type: object
          allOf:
          - $ref: "#/components/schemas/BankAccountV2Request"
        notificationUrl:
          format: uri
          description: URL que receberá todas as notificações.
          type: string
          example: https://meusite.com.br/events
    ReceiverCpfV2Request:
      required:
      - name
      - document
      - address
      - phone
      - birthdate
      - email
      - mcc
      - softDescriptor
      - bankAccount
      type: object
      properties:
        name:
          description: Nome do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/NameV2Request"
        document:
          description: CPF do recebedor.
          maxLength: 11
          minLength: 11
          pattern: \d+
          type: string
          example: "51190844001"
        address:
          description: Endereço do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/AddressV2Request"
        phone:
          description: Telefone do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneRequestV2"
        birthdate:
          format: YYYY-MM-DD
          description: Data de nascimento do recebedor.
          type: string
          example: 2000-01-21
        email:
          description: Email do recebedor.
          type: string
        mcc:
          format: int32
          description: MCC do recebedor veja lista.
          type: integer
        softDescriptor:
          description: Nome que aparece na fatura
          type: string
        bankAccount:
          description: Conta bancária da empresa recebedora.
          type: object
          allOf:
          - $ref: "#/components/schemas/BankAccountV2Request"
        notificationUrl:
          format: uri
          description: URL que receberá todas as notificações.
          type: string
          example: https://meusite.com.br/events
    ReceiverOwnerV2Request:
      required:
      - name
      - address
      - phone
      - document
      - birthdate
      - email
      type: object
      properties:
        name:
          description: Nome do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/NameV2Request"
        address:
          description: Endereço do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/AddressV2Request"
        phone:
          description: Telefone do recebedor.
          type: object
          allOf:
          - $ref: "#/components/schemas/PhoneRequestV2"
        document:
          description: CPF do recebedor.
          maxLength: 11
          minLength: 11
          pattern: \d+
          type: string
          example: "51190844001"
        birthdate:
          format: YYYY-MM-DD
          description: Data de nascimento do recebedor.
          type: string
          example: 2000-01-21
        email:
          description: Email do recebedor.
          type: string
    RecurringInvoiceItemV2Request:
      required:
      - productId
      - quantity
      - unitPriceInCents
      - maxBillingCycles
      type: object
      properties:
        productId:
          format: int32
          description: ID do produto
          type: integer
          example: 101
        quantity:
          format: int32
          description: Quantidade do produto
          type: integer
          example: 2
        unitPriceInCents:
          format: int64
          description: Preço unitário do produto em centavos
          type: integer
          example: 1999
        maxBillingCycles:
          format: int32
          description: Número de ciclos de cobrança deve estar entre 1 e 9999. Não
            pode ser nulo.
          maximum: 9999
          minimum: 1
          type: integer
          example: 12
    RecurringInvoiceV2Request:
      required:
      - customerId
      - billingCycleStartDate
      - daysUntilDue
      - billingFrequency
      - recurringItems
      - acceptedPaymentMethods
      - collectionMethod
      type: object
      properties:
        customerId:
          format: int32
          description: ID do cliente que está sendo faturado
          type: integer
          example: 12345
        billingCycleStartDate:
          format: int64
          description: Timestamp que indica o início do ciclo de cobrança
          type: integer
          example: 1691462400000
        nextCycleDueDate:
          format: int64
          description: Timestamp que indica a data de pagamento a partir da segunda
            cobrança
          type: integer
          example: 1691462400000
        daysUntilDue:
          format: int32
          description: Número de dias até a fatura vencer
          minimum: 1
          type: integer
          example: 30
        billingFrequency:
          description: "Frequência de cobrança para o produto (ex: MONTHLY)"
          type: string
          allOf:
          - $ref: "#/components/schemas/PlanFrequency"
          example: MONTHLY
        recurringItems:
          description: Lista de itens recorrentes incluídos na fatura
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/RecurringInvoiceItemV2Request"
        extraItems:
          description: Lista de itens não recorrentes incluídos na fatura
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItemV2Request"
        acceptedPaymentMethods:
          description: Métodos de pagamento aceitos para a fatura
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/InvoicePaymentMethodRequest"
        notificationUrl:
          description: URL para notificações relacionadas à fatura
          type: object
          example: https://example.com/notification
        collectionMethod:
          description: Método de cobrança da fatura
          type: string
          allOf:
          - $ref: "#/components/schemas/CollectionMethodTypes"
          example: AUTOMATIC_CHARGE
    RefundReason:
      enum:
      - DUPLICATE_CHARGE
      - IMPROPER_CHARGE
      - COSTUMER_WITHDRAWAL
      - OTHERS
      type: string
    RefundV2Request:
      required:
      - reason
      type: object
      properties:
        reason:
          description: Motivo do estorno.
          type: string
          allOf:
          - $ref: "#/components/schemas/RefundReason"
        amount:
          format: int64
          description: Valor do estorno em centavos.
          type: integer
    SimulationV2Request:
      required:
      - grossAmount
      type: object
      properties:
        grossAmount:
          format: int64
          description: Valor da cobrança em centavos.
          type: integer
    SplitModes:
      enum:
      - DATABASE
      - ACQUIRER
      type: string
    SubscriptionChargeV2Request:
      required:
      - customer
      - card
      type: object
      properties:
        customer:
          description: Dados do cliente.
          required:
          - name
          - document
          type: object
          properties:
            name:
              description: Nome do cliente.
              maxLength: 50
              minLength: 1
              type: string
              example: Tony Stark
            document:
              description: CPF/CNPJ do cliente.
              type: string
              example: "51190844001"
            birthdate:
              format: YYYY-MM-DD
              description: Data de nascimento do cliente.
              type: string
              example: 2000-01-01
            phone:
              description: Telefone do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/PhoneV2Request"
            email:
              description: Email do cliente.
              type: string
            address:
              description: Endereço do cliente.
              type: object
              allOf:
              - $ref: "#/components/schemas/AddressV2Request"
        card:
          description: Dados do cartão de crédito.
          required:
          - cardNumber
          - holder
          - expiration
          type: object
          properties:
            cardNumber:
              description: Número do cartão de crédito.
              maxLength: 21
              minLength: 11
              pattern: \d+
              type: string
              example: "5448280000000007"
            cvv:
              description: CVV do cartão de crédito.
              maxLength: 4
              minLength: 3
              pattern: \d+
              type: string
              example: "123"
            holder:
              description: Dados do portador do cartão de crédito.
              type: object
              allOf:
              - $ref: "#/components/schemas/HolderCardV2Request"
            expiration:
              description: Validade do cartão de crédito.
              type: object
              allOf:
              - $ref: "#/components/schemas/ExpirationCardV2Request"
        yourReferenceId:
          format: int64
          description: "Número de referência externo, possibilitando a realização\
            \ de pesquisa."
          minimum: 1
          type: integer
          example: 123456
        notificationUrl:
          description: URL que receberá todas as notificações da assinatura.
          type: string
          example: https://meusite.com.br/events
        dataOnly:
          $ref: "#/components/schemas/GatewayDataOnlyRequest"
    ThemeCheckoutMinimalV2Response:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
